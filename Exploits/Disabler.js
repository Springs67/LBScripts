/// api_version=2

var plr = mc.thePlayer
function speed(v) { plr.motionX *= v; plr.motionZ *= v; }
function setMotionY(v) { plr.motionY = v }
function sendPacket(v) { plr.sendQueue.addToSendQueue(v) }
function setTimer(v) { mc.timer.timerSpeed = v }
function setYPos(v) { plr.setPosition(plr.posX, plr.posY + v, plr.posZ) }
var tick = 0
var tick2 = 0
var tick3 = 0
var client = "net.minecraft.network.play.client"

var packets = [
    C0FPacketConfirmTransaction = Java.type(client + ".C0FPacketConfirmTransaction"),
    C04PacketPlayerPosition = Java.type(client + ".C03PacketPlayer.C04PacketPlayerPosition"),
    C18PacketSpectate = Java.type(client + ".C18PacketSpectate"),
    C03PacketPlayer = Java.type(client + ".C03PacketPlayer"),
    C02PacketUseEntity = Java.type(client + ".C02PacketUseEntity"),
    C00PacketKeepAlive = Java.type(client + ".C00PacketKeepAlive"),
    C13PacketPlayerAbilities = Java.type(client + ".C13PacketPlayerAbilities"),
    C09PacketHeldItemChange = Java.type(client + ".C09PacketHeldItemChange"),
    C17PacketCustomPayload = Java.type(client + ".C17PacketCustomPayload"),
    C0CPacketInput = Java.type(client + ".C0CPacketInput"),
    C16PacketClientStatus = Java.type(client + ".C16PacketClientStatus"),
    //S12PacketEntityVelocity = Java.type(client + ".S12PacketEntityVelocity"),
    C08PacketPlayerBlockPlacement = Java.type(client + ".C08PacketPlayerBlockPlacement"),
    C0EPacketClickWindow = Java.type(client + ".C0EPacketClickWindow"),
]

function realSpoofGround() {
    plr.onGround = true
    sendPacket(new C03PacketPlayer(true))
}

var Disabler2 = registerScript({
    name: "Disabler2",
    version: "1.0.0",
    authors: ["spring67"]
})

Disabler2.registerModule({
    name: "Disabler2",
    category: "Fun",
    description: "bypassing disabler",
    tag: "MoonRewriteFull",
    settings: {
        Mode: Setting.list({
            name: "Mode",
            default: "MoonRewriteFull",
            values: [
                "MoonRewriteFull",
                "MoonRewriteTest",
                "MoonRewriteStrafe",
            ]
        }),
        InvalidPosition: Setting.boolean({
            name: "InvalidPosition",
            default: true,
        })
    }
}, function(module) {
    var oldposY = plr.posY
    var oldposLastTickX = 0
    var oldposLastTickZ = 0
    module.on("enable", function(){
        
    })
    module.on("disable", function(){
        setTimer(1)
        timeInAir = 0
        tick = 0
    })
    module.on("update", function(){
        if (module.settings.Mode.get() == "MoonRewriteFull") {
            sendPacket(new C0CPacketInput(-1, -1, false, true))
        }

        if (tick > 0) {
            oldposLastTickX = plr.posX
            oldposLastTickZ = plr.posZ
        }

        if (!plr.onGround) { timeInAir ++ }else{ timeInAir = 0 }
        tick ++
        tick2 ++
        tick3 ++
        module.tag = module.settings.Mode.get()
    })
    module.on("packet", function(eventPacket){
        var thePacket = eventPacket.getPacket()

        if (module.settings.Mode.get() == "MoonRewriteFull") {
            if (module.settings.InvalidPosition.get()) {
                if (thePacket instanceof C04PacketPlayerPosition) {
                    if (tick > 2) {
                        thePacket.x = ""
                        thePacket.z = ""
                        
                        tick = 0
                    }
                }
            }
            if (thePacket instanceof C0EPacketClickWindow) {
                Chat.print(thePacket)
            }
        }else if (module.settings.Mode.get() == "MoonRewriteStrafe") {
            if (thePacket instanceof C04PacketPlayerPosition) {
                if (timeInAir == 3) {
                    if (tick > 20) {
                        thePacket.y = plr.posY
                        tick = 0
                    }else{
                        thePacket.y = plr.posY - 0.75
                    }
                    thePacket.onGround = true

                    Chat.print("y:" + thePacket.y + "; onGround:" + thePacket.onGround)


                    timeInAir = 0
                }
            }
        }
    })
})
